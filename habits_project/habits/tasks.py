# habits/tasks.py
from celery import shared_task
from django.conf import settings
from django.utils import timezone
from telegram import Bot

from .models import Habit


@shared_task
def send_habit_reminders():
    """
    –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–∏–≤—ã—á–∫–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–ª–µ `time`
    —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º —á–∞—Å–æ–º –∏ –º–∏–Ω—É—Ç–æ–π, –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    –≤ —á–∞—Ç, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    now = timezone.localtime()
    hour = now.hour
    minute = now.minute

    bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
    sent_count = 0

    qs = Habit.objects.filter(
        time__hour=hour,
        time__minute=minute,
        is_reward=False,
    ).select_related("user", "user__profile")

    for habit in qs:
        profile = getattr(habit.user, "profile", None)
        chat_id = getattr(profile, "telegram_chat_id", None)
        if not chat_id:
            continue

        text = (
            f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–∏–≤—ã—á–∫–µ:\n"
            f"‚Ä¢ –î–µ–π—Å—Ç–≤–∏–µ: {habit.action}\n"
            f"‚Ä¢ –í—Ä–µ–º—è: {habit.time.strftime('%H:%M')}\n"
            f"‚Ä¢ –ú–µ—Å—Ç–æ: {habit.place}"
        )
        try:
            bot.send_message(chat_id=chat_id, text=text)
            sent_count += 1
        except Exception:
            continue

    return f"Sent {sent_count} reminders at {hour:02d}:{minute:02d}"
