services:
  db:
    image: postgres:15
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DATABASE_USER}" ]
      interval: 10s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5

  web:
      build: .
      env_file:
        - .env
      depends_on:
        db:
          condition: service_healthy
        redis:
          condition: service_healthy
      command: >
        bash -c "
          python manage.py migrate --noinput &&
          python manage.py collectstatic --noinput &&
          gunicorn config.wsgi:application --bind 0.0.0.0:8000
        "
      ports:
        - "8000:8000"

  # Celery worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery_app worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - db

  # Celery beat scheduler
  beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery_app beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - db



volumes:
  pgdata: