services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    env_file:            # только здесь подтягиваем .env
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      bash -c "
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        gunicorn habits_project.config.wsgi:application --bind 0.0.0.0:8000
      "
    ports:
      - "8000:8000"

  worker:
    build: .
    env_file:
      - .env
    command: celery -A habits_project.config.celery worker --loglevel=info
    depends_on:
      - db
      - redis

  beat:
    build: .
    env_file:
      - .env
    command: celery -A habits_project.config.celery beat --loglevel=info
    depends_on:
      - db
      - redis

volumes:
  pgdata: